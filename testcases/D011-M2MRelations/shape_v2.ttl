@base <http://example.com/base/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix uq: <http://sirius−labs.no/shapes/unique#> .

<Student> a sh:NodeShape , rdfs:Class ;
    sh:property [ sh:datatype xsd:integer ;
        sh:nodeKind sh:Literal ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:path <Student#ID> ] ; 
    sh:property [ # sh:maxLength 50 ;
        sh:datatype xsd:string ;
        sh:nodeKind sh:Literal ;
        sh:maxCount 1 ;
        sh:path <Student#FirstName> ] ; 
    sh:property [ # sh:maxLength 50 ;
        sh:datatype xsd:string ;
        sh:nodeKind sh:Literal ;
        sh:maxCount 1 ;
        sh:path <Student#LastName> ] ; 
    sh:property [
        sh:path <Student_Sport#ID_Student,ID_Sport,ID,ID> ;
        sh:nodeKind sh:IRI;
        sh:class <Sport>
    ];
    uq:uniqueValuesForClass [
        uq:unqProp <Student#ID> ;
        uq:unqForClass <Student>
    ] .

<Sport> a sh:NodeShape , rdfs:Class ;
    sh:property [ sh:datatype xsd:integer ;
        sh:nodeKind sh:Literal ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:path <Sport#ID> ] ; 
    sh:property [ # sh:maxLength 50 ;
        sh:datatype xsd:string ;
        sh:nodeKind sh:Literal ;
        sh:maxCount 1 ;
        sh:path <Sport#Description> ] ; 
    sh:property [
        sh:path [
            sh:inversePath <Student_Sport#ID_Student,ID_Sport,ID,ID>
        ];
        sh:nodeKind sh:IRI;
        sh:class <Student>
    ];
    uq:uniqueValuesForClass [
        uq:unqProp <Sport#ID> ;
        uq:unqForClass <Sport>
    ] .

uq:UniqueValuesConstraintComponent
    a sh:ConstraintComponent ;
    sh:parameter [
        sh:path uq:uniqueValuesForClass
    ] ; 
    sh:nodeValidator [
        a sh:SPARQLSelectValidator ;
        sh:select """
            PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
            PREFIX uq: <http://sirius−labs.no/shapes/unique#>

            SELECT $this ?other
            WHERE { 
                FILTER NOT EXISTS {
                    GRAPH $shapesGraph {
                        $uniqueValuesForClass uq:unqProp ?prop
                    }
                    $this ?prop ?thisVal .
                    ?other ?prop ?otherVal .
                    FILTER (?thisVal != ?otherVal)
                }
                FILTER (?other != $this)
                GRAPH $shapesGraph {
                    $uniqueValuesForClass uq:unqForClass ?class
                } 
                ?other rdf:type $class .
            }
        """
    ] .